{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport firebase from 'firebase';\nimport { firebaseConfig } from \"../firebase\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar db = firebase.database();\n\nvar fetchCategories = function fetchCategories() {\n  var category, response, snapshot;\n  return _regeneratorRuntime.async(function fetchCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          response = db.ref('categories');\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(response.once('value'));\n\n        case 3:\n          snapshot = _context.sent;\n          snapshot.forEach(function (childSnapshot) {\n            category = childSnapshot.val();\n          });\n          return _context.abrupt(\"return\", category);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar fetchIngredience = function fetchIngredience() {\n  var ingredients, response, snapshot;\n  return _regeneratorRuntime.async(function fetchIngredience$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          response = db.ref('ingredients');\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(response.once('value'));\n\n        case 3:\n          snapshot = _context2.sent;\n          snapshot.forEach(function (childSnapshot) {\n            ingredients = childSnapshot.val();\n          });\n          return _context2.abrupt(\"return\", ingredients);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport function getCategoryById(categoryId) {\n  var category, categoriesFromDb;\n  return _regeneratorRuntime.async(function getCategoryById$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetchCategories());\n\n        case 2:\n          categoriesFromDb = _context3.sent;\n          categoriesFromDb.map(function (data) {\n            if (data.id == categoryId) {\n              category = data;\n            }\n          });\n          return _context3.abrupt(\"return\", category);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  fetchIngredience().then(function (res) {\n    res.map(function (data) {\n      if (data.ingredientId == ingredientID) {\n        name = data.name;\n      }\n    });\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n;\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["/Users/branislavbuna/Desktop/recipes/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","firebase","firebaseConfig","apps","length","initializeApp","db","database","fetchCategories","response","ref","once","snapshot","forEach","childSnapshot","category","val","fetchIngredience","getCategoryById","categoryId","categoriesFromDb","map","data","id","getIngredientName","ingredientID","name","then","res","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","push","getRecipesByIngredient","index","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title"],"mappings":"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","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport firebase from 'firebase';\nimport {firebaseConfig} from '../firebase';\n\nif(!firebase.apps.length) {\n  // initialiaze firebase\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.database();\n\n// nacitanie kategorii z firebase databazy\nconst fetchCategories = async () => {\n  let category;\n  const response = db.ref('categories');\n  const snapshot = await response.once('value');\n  snapshot.forEach(childSnapshot => {\n    category = childSnapshot.val();\n  });\n  return category;\n}\n\n// nacitanie ingrediencii z firebase databazy\nconst fetchIngredience = async () => {\n  let ingredients;\n  const response = db.ref('ingredients');\n  const snapshot = await response.once('value');\n  snapshot.forEach(childSnapshot => {\n    ingredients = childSnapshot.val();\n  });\n  return ingredients;\n}\n\nexport async function getCategoryById(categoryId) { // ID\n  let category;\n  let categoriesFromDb = await fetchCategories();\n\n  categoriesFromDb.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) { // name ingredietn\n  let name;\n  fetchIngredience().then((res) => {\n    res.map(data => {\n      if (data.ingredientId == ingredientID) {\n        name = data.name;\n      }\n    });\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) { // touch on ingredient\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n\n  return url;\n};\n\nexport function getCategoryName(categoryId) { \n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  let ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); \n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}